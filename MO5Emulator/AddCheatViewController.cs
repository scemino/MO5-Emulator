// This file has been autogenerated from a class added in the UI designer.

using System;
using AppKit;
using Foundation;

namespace MO5Emulator
{
    public partial class AddCheatViewController : NSViewController
	{
        private int byteSize = 1;
        private CheatModel _cheat;

        public CheatViewController Presentor { get; internal set; }

        public event EventHandler CheatModified;

		[Export("Cheat")]
        public CheatModel Cheat
		{
			get { return _cheat; }
			set
			{
				WillChangeValue("Cheat");
				_cheat = value;
				DidChangeValue("Cheat");
			}
		}

        public AddCheatViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
        
            var hexFormatter = new HexFormatter { Maximum = 0xFFFF };
            AddressTextField.Formatter = hexFormatter;
            AddButton.Activated += (sender, e) => AddCheat();
        }

        bool Validate()
        {
            if (string.IsNullOrEmpty(AddressTextField.StringValue))
            {
                AddressTextField.SelectText(this);
                return false;
            }

            if (string.IsNullOrEmpty(ValueTextField.StringValue))
            {
                ValueTextField.SelectText(this);
                return false;
            }
            return true;
        }

        partial void ByteSize(NSButton sender)
        {
            byteSize = (int)sender.Tag;
            ((NSNumberFormatter)ValueTextField.Formatter).Minimum = 0;
            ((NSNumberFormatter)ValueTextField.Formatter).Maximum = Math.Pow(2, byteSize * 8) - 1;
        }

        private void AddCheat()
        {
            if (!Validate())
                return;
            
            var address = AddressTextField.IntValue;
            var value = ValueTextField.IntValue;

            CheatModified?.Invoke(this, EventArgs.Empty);
            CloseSheet();
        }

        partial void CancelCheat(NSButton sender)
        {
            CloseSheet();
        }

		private void CloseSheet()
		{
			Presentor.DismissViewController(this);
		}
	}
}
